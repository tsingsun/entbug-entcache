// Code generated by ent, DO NOT EDIT.

package securityjournal

const (
	// Label holds the string label denoting the securityjournal type in the database.
	Label = "security_journal"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSecurityAccountID holds the string denoting the security_account_id field in the database.
	FieldSecurityAccountID = "security_account_id"
	// FieldAccountID holds the string denoting the account_id field in the database.
	FieldAccountID = "account_id"
	// FieldBizNo holds the string denoting the biz_no field in the database.
	FieldBizNo = "biz_no"
	// FieldBizType holds the string denoting the biz_type field in the database.
	FieldBizType = "biz_type"
	// FieldOrgID holds the string denoting the org_id field in the database.
	FieldOrgID = "org_id"
	// FieldTradeCode holds the string denoting the trade_code field in the database.
	FieldTradeCode = "trade_code"
	// FieldChangeType holds the string denoting the change_type field in the database.
	FieldChangeType = "change_type"
	// FieldRecordMethodID holds the string denoting the record_method_id field in the database.
	FieldRecordMethodID = "record_method_id"
	// FieldProjectID holds the string denoting the project_id field in the database.
	FieldProjectID = "project_id"
	// FieldProductID holds the string denoting the product_id field in the database.
	FieldProductID = "product_id"
	// FieldMaterialID holds the string denoting the material_id field in the database.
	FieldMaterialID = "material_id"
	// FieldMaterialNo holds the string denoting the material_no field in the database.
	FieldMaterialNo = "material_no"
	// FieldMaterialName holds the string denoting the material_name field in the database.
	FieldMaterialName = "material_name"
	// FieldMultiplier holds the string denoting the multiplier field in the database.
	FieldMultiplier = "multiplier"
	// FieldPositionType holds the string denoting the position_type field in the database.
	FieldPositionType = "position_type"
	// FieldCurrency holds the string denoting the currency field in the database.
	FieldCurrency = "currency"
	// FieldQty holds the string denoting the qty field in the database.
	FieldQty = "qty"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldCost holds the string denoting the cost field in the database.
	FieldCost = "cost"
	// FieldTotal holds the string denoting the total field in the database.
	FieldTotal = "total"
	// FieldUnit holds the string denoting the unit field in the database.
	FieldUnit = "unit"
	// FieldSpec holds the string denoting the spec field in the database.
	FieldSpec = "spec"
	// FieldCommission holds the string denoting the commission field in the database.
	FieldCommission = "commission"
	// FieldFee holds the string denoting the fee field in the database.
	FieldFee = "fee"
	// FieldFeeOther holds the string denoting the fee_other field in the database.
	FieldFeeOther = "fee_other"
	// FieldCount holds the string denoting the count field in the database.
	FieldCount = "count"
	// FieldDirection holds the string denoting the direction field in the database.
	FieldDirection = "direction"
	// FieldTamper holds the string denoting the tamper field in the database.
	FieldTamper = "tamper"
	// FieldSummary holds the string denoting the summary field in the database.
	FieldSummary = "summary"
	// FieldPairSubjectCode holds the string denoting the pair_subject_code field in the database.
	FieldPairSubjectCode = "pair_subject_code"
	// FieldPairSecurityAccountID holds the string denoting the pair_security_account_id field in the database.
	FieldPairSecurityAccountID = "pair_security_account_id"
	// FieldLastBalance holds the string denoting the last_balance field in the database.
	FieldLastBalance = "last_balance"
	// FieldStlTime holds the string denoting the stl_time field in the database.
	FieldStlTime = "stl_time"
	// FieldFxRate holds the string denoting the fx_rate field in the database.
	FieldFxRate = "fx_rate"
	// FieldStlCurrency holds the string denoting the stl_currency field in the database.
	FieldStlCurrency = "stl_currency"
	// FieldStlAmount holds the string denoting the stl_amount field in the database.
	FieldStlAmount = "stl_amount"
	// FieldStlMarginLv holds the string denoting the stl_margin_lv field in the database.
	FieldStlMarginLv = "stl_margin_lv"
	// FieldIsSettlement holds the string denoting the is_settlement field in the database.
	FieldIsSettlement = "is_settlement"
	// FieldActualStlTime holds the string denoting the actual_stl_time field in the database.
	FieldActualStlTime = "actual_stl_time"
	// FieldTransNo holds the string denoting the trans_no field in the database.
	FieldTransNo = "trans_no"
	// FieldTransTime holds the string denoting the trans_time field in the database.
	FieldTransTime = "trans_time"
	// FieldAccountingNo holds the string denoting the accounting_no field in the database.
	FieldAccountingNo = "accounting_no"
	// FieldAccountingTime holds the string denoting the accounting_time field in the database.
	FieldAccountingTime = "accounting_time"
	// FieldAccountedPositionQty holds the string denoting the accounted_position_qty field in the database.
	FieldAccountedPositionQty = "accounted_position_qty"
	// FieldCdDirection holds the string denoting the cd_direction field in the database.
	FieldCdDirection = "cd_direction"
	// FieldApplyFields holds the string denoting the apply_fields field in the database.
	FieldApplyFields = "apply_fields"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldRefTransNo holds the string denoting the ref_trans_no field in the database.
	FieldRefTransNo = "ref_trans_no"
	// FieldIsDayBooking holds the string denoting the is_day_booking field in the database.
	FieldIsDayBooking = "is_day_booking"
	// FieldIsEffectFund holds the string denoting the is_effect_fund field in the database.
	FieldIsEffectFund = "is_effect_fund"
	// Table holds the table name of the securityjournal in the database.
	Table = "security_journal"
)

// Columns holds all SQL columns for securityjournal fields.
var Columns = []string{
	FieldID,
	FieldSecurityAccountID,
	FieldAccountID,
	FieldBizNo,
	FieldBizType,
	FieldOrgID,
	FieldTradeCode,
	FieldChangeType,
	FieldRecordMethodID,
	FieldProjectID,
	FieldProductID,
	FieldMaterialID,
	FieldMaterialNo,
	FieldMaterialName,
	FieldMultiplier,
	FieldPositionType,
	FieldCurrency,
	FieldQty,
	FieldPrice,
	FieldAmount,
	FieldCost,
	FieldTotal,
	FieldUnit,
	FieldSpec,
	FieldCommission,
	FieldFee,
	FieldFeeOther,
	FieldCount,
	FieldDirection,
	FieldTamper,
	FieldSummary,
	FieldPairSubjectCode,
	FieldPairSecurityAccountID,
	FieldLastBalance,
	FieldStlTime,
	FieldFxRate,
	FieldStlCurrency,
	FieldStlAmount,
	FieldStlMarginLv,
	FieldIsSettlement,
	FieldActualStlTime,
	FieldTransNo,
	FieldTransTime,
	FieldAccountingNo,
	FieldAccountingTime,
	FieldAccountedPositionQty,
	FieldCdDirection,
	FieldApplyFields,
	FieldCreatedAt,
	FieldRefTransNo,
	FieldIsDayBooking,
	FieldIsEffectFund,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultAccountID holds the default value on creation for the "account_id" field.
	DefaultAccountID int
	// BizNoValidator is a validator for the "biz_no" field. It is called by the builders before save.
	BizNoValidator func(string) error
	// BizTypeValidator is a validator for the "biz_type" field. It is called by the builders before save.
	BizTypeValidator func(string) error
	// TradeCodeValidator is a validator for the "trade_code" field. It is called by the builders before save.
	TradeCodeValidator func(string) error
	// ChangeTypeValidator is a validator for the "change_type" field. It is called by the builders before save.
	ChangeTypeValidator func(string) error
	// MaterialNoValidator is a validator for the "material_no" field. It is called by the builders before save.
	MaterialNoValidator func(string) error
	// MaterialNameValidator is a validator for the "material_name" field. It is called by the builders before save.
	MaterialNameValidator func(string) error
	// CurrencyValidator is a validator for the "currency" field. It is called by the builders before save.
	CurrencyValidator func(string) error
	// DefaultQty holds the default value on creation for the "qty" field.
	DefaultQty float64
	// UnitValidator is a validator for the "unit" field. It is called by the builders before save.
	UnitValidator func(string) error
	// SpecValidator is a validator for the "spec" field. It is called by the builders before save.
	SpecValidator func(string) error
	// DefaultCount holds the default value on creation for the "count" field.
	DefaultCount int
	// TamperValidator is a validator for the "tamper" field. It is called by the builders before save.
	TamperValidator func(string) error
	// SummaryValidator is a validator for the "summary" field. It is called by the builders before save.
	SummaryValidator func(string) error
	// PairSubjectCodeValidator is a validator for the "pair_subject_code" field. It is called by the builders before save.
	PairSubjectCodeValidator func(string) error
	// StlCurrencyValidator is a validator for the "stl_currency" field. It is called by the builders before save.
	StlCurrencyValidator func(string) error
	// DefaultIsSettlement holds the default value on creation for the "is_settlement" field.
	DefaultIsSettlement string
	// IsSettlementValidator is a validator for the "is_settlement" field. It is called by the builders before save.
	IsSettlementValidator func(string) error
	// TransNoValidator is a validator for the "trans_no" field. It is called by the builders before save.
	TransNoValidator func(string) error
	// AccountingNoValidator is a validator for the "accounting_no" field. It is called by the builders before save.
	AccountingNoValidator func(string) error
	// RefTransNoValidator is a validator for the "ref_trans_no" field. It is called by the builders before save.
	RefTransNoValidator func(string) error
	// IsDayBookingValidator is a validator for the "is_day_booking" field. It is called by the builders before save.
	IsDayBookingValidator func(string) error
	// DefaultIsEffectFund holds the default value on creation for the "is_effect_fund" field.
	DefaultIsEffectFund string
	// IsEffectFundValidator is a validator for the "is_effect_fund" field. It is called by the builders before save.
	IsEffectFundValidator func(string) error
)
